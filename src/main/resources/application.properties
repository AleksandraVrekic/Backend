spring.jpa.database = POSTGRESQL
spring.datasource.platform = postgres
spring.jpa.show-sql = true
spring.datasource.driver-class-name = org.postgresql.Driver
# parametri za konektovanje na bazu podataka sa fakultetskih računara
# za studente je username i naziv baze u formatu: itXXg20XX, a password je: ftn
#spring.datasource.url = jdbc:postgresql://192.168.100.251:5432/postgres
#spring.datasource.username = postgres
#spring.datasource.password = postgres
# Parametri za konektovanje na bazu podataka sa ličnih računara
# Svima je username i password postgres!
spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
spring.datasource.username = postgres
spring.datasource.password = postgres
# port pomocu kojeg pristupamo 
server.port = 8090
# disable driver's feature detection
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER



spring.jackson.serialization.fail-on-empty-beans = false

# without detection you have to set the dialect by hand
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect


spring.jpa.hibernate.ddl-auto=none
spring.sql.initialization.schema-locations=classpath:SqlScripts/CreateScriptRVA.sql
spring.sql.initialization.data-locations=classpath:SqlScripts/InsertRVA.sql


spring.sql.initialization-mode=always
#spring.datasource.data=classpath:/SqlScripts/InsertRVA.sql


#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl